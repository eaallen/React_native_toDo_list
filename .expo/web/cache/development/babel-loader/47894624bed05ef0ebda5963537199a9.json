{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elijah Allen\\\\ReactNative\\\\TestApp\\\\App.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./comps/ListItem\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.addTask = function (text) {\n      var count = Object.values(_this.state.task).length;\n      console.log('count==>', count);\n\n      if (!_this.state.task.id) {\n        _this.state.task.id[1] = text;\n      } else {\n        _this.state.task.id[count + 1] = text;\n      }\n    };\n\n    _this.render = function () {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }, \"Open up App.js to start working on your app!\"), React.createElement(ListItem, {\n        state: _this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }));\n    };\n\n    _this.state = {\n      task: {\n        id: null,\n        desc: null\n      }\n    };\n    _this.actions = {};\n    return _this;\n  }\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Elijah Allen/ReactNative/TestApp/App.js"],"names":["React","ListItem","App","props","addTask","text","count","Object","values","state","task","length","console","log","id","render","styles","container","desc","actions","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,QAAP;;IAEqBC,G;;;AACnB,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;;AADgB,UAUlBC,OAVkB,GAUR,UAACC,IAAD,EAAS;AACjB,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,MAAKC,KAAL,CAAWC,IAAzB,EAA+BC,MAA7C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,KAAvB;;AACA,UAAG,CAAC,MAAKG,KAAL,CAAWC,IAAX,CAAgBI,EAApB,EAAuB;AACrB,cAAKL,KAAL,CAAWC,IAAX,CAAgBI,EAAhB,CAAmB,CAAnB,IAAwBT,IAAxB;AACD,OAFD,MAEK;AACH,cAAKI,KAAL,CAAWC,IAAX,CAAgBI,EAAhB,CAAmBR,KAAK,GAAC,CAAzB,IAA8BD,IAA9B;AACD;AAGF,KApBiB;;AAAA,UAqBlBU,MArBkB,GAqBX,YAAI;AACT,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAEE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,MAAKR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KA5BiB;;AAEhB,UAAKA,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC;AAACI,QAAAA,EAAE,EAAC,IAAJ;AAASI,QAAAA,IAAI,EAAC;AAAd;AADM,KAAb;AAGA,UAAKC,OAAL,GAAc,EAAd;AALgB;AAQjB;;;EAT8BnB,KAAK,CAACoB,S;;SAAlBlB,G;AAuCrB,IAAMc,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport ListItem from './comps/ListItem'\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      task:{id:null,desc:null}\n    }\n    this.actions ={\n\n    }\n  }\n\n  addTask = (text) =>{\n    const count = Object.values(this.state.task).length\n    console.log('count==>',count)\n    if(!this.state.task.id){\n      this.state.task.id[1] = text\n    }else{\n      this.state.task.id[count+1] = text\n    }\n    \n\n  }\n  render=()=>{\n    return (\n      <View style={styles.container}>\n        <Text>Open up App.js to start working on your app!</Text>\n        <ListItem state={this.state}/>\n      </View>\n    );\n  }\n}\n\n\n\n\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}